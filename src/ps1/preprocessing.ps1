# Convert all pcap files from source to zng in dest
$source_folder = $args[0]
$destination_folder = $args[1]

# Check if both the brimcap path and destination folder are provided
if (-not $source_folder -or -not $destination_folder) {
    Write-Host "Usage: .\preprocessing.ps1 <source_folder> <destination_folder>"
    Exit
}

# Create the destination folder if it doesn't exist
if (-not (Test-Path -Path $destination_folder)) {
    New-Item -ItemType Directory -Path $destination_folder | Out-Null
}

# Get all pcap files in the source directory
$pcapFiles = Get-ChildItem -Path $source_folder -Filter *.pcap

# Debug
Write-Host $pcapFiles

# Loop through each pcap file and run brimcap
foreach ($pcapFile in $pcapFiles) {
    # Construct the output file path with .zng extension in the destination folder
    $outputFile = Join-Path -Path $destination_folder -ChildPath "$($pcapFile.BaseName).zng"
    
    # Check if the .zng file already exists, and skip the loop if it does
    if (Test-Path -Path $outputFile) {
        Write-Host "Skipping $($pcapFile.Name). The corresponding .zng file already exists."
        continue
    }

    # Construct the command to run brimcap
    Write-Host "Analyzing $($pcapFile.FullName)..."
    $command = "brimcap analyze -o $outputFile $($pcapFile.FullName)"
    
    # Execute the command
    Invoke-Expression -Command $command
    Write-Host "$($pcapFile.FullName) analyzed successfully!"
}

# Create a zed pool to load zng files converted
$zed_pool_name = $args[2]

# Create a zed pool
Invoke-Expression -Command "zed create -orderby ts:desc $zed_pool_name"

# Use created pool
Invoke-Expression -Command "zed use $zed_pool_name"

# Get all .zng files in the destination folder
$zngFiles = Get-ChildItem -Path $destination_folder -Filter *.zng

# Loop through each .zng file and run zed load
foreach ($zngFile in $zngFiles) {
    Write-Host "Adding $($zngFile.FullName) to pool $zed_pool_name"
    # Construct the command to run zed load for each .zng file
    $zedLoadCommand = "zed load $($zngFile.FullName)"
    
    # Execute the zed load command
    Invoke-Expression -Command $zedLoadCommand
    Write-Host "$($zngFile.FullName) have been added to $zed_pool_name"
}

Write-Host "All files add to pool $zed_pool_name"
